备份策略

==============
svn备份一般采用三种方式：
1）svnadmin dump
2)svnadmin hotcopy
3)svnsync.
优缺点分析
==============
第一种svnadmin dump是官方推荐的备份方式，优点是比较灵活，可以全量备份也可以增量备份，并提供了版本恢复机制。
缺点是：如果版本比较大，如版本数增长到数万、数十万，那么dump的过程将非常慢；备份耗时，恢复更耗时；不利于快速进行灾难恢复。
个人建议在版本数比较小的情况下使用这种备份方式。
第二种svnadmin hotcopy原设计目的估计不是用来备份的，只能进行全量拷贝，不能进行增量备份；
优点是：备份过程较快，灾难恢复也很快；如果备份机上已经搭建了svn服务，甚至不需要恢复，只需要进行简单配置即可切换到备份库上工作。
缺点是：比较耗费硬盘，需要有较大的硬盘支持
第三种svnsync实际上是制作2个镜像库，当一个坏了的时候，可以迅速切换到另一个。不过，必须svn1.4版本以上才支持这个功能。
优点是：当制作成2个镜像库的时候起到双机实时备份的作用；
缺点是：当作为2个镜像库使用时，没办法做到“想完全抛弃今天的修改恢复到昨晚的样子”；而当作为普通备份机制每日备份时，操作又较前2种方法麻烦。
练习：
以下为了方便操作将svn的目录添加到PATH中
[root@svn ~]# vim /etc/profile
PATH=/usr/local/svn/bin:$PATH
[root@svn ~]# source /etc/profile
一、svnadmin dump使用
1.使用svnadmin dump 做完全备份
[root@svn ~]# svnadmin dump /data/svn/repos/ >/home/backup/svn.full.bak
* Dumped revision 0.
* Dumped revision 1.
2.使用svnadmin dump 做增量备份
[root@svn ~]# svnadmin dump /data/svn/repos/ -r2 --incremental >/home/backup/svn.2.bak
以增量方式将版本号1的版本库备份为svn.1.bak
3.使用svnadmin dump 还原，为了方便测试建立一个test的版本库
[root@svn ~]# svnadmin create /data/svn/test
[root@svn ~]# svnadmin load /data/svn/test/ < /home/backup/svn.full.bak
<<< Started new transaction, based on original revision 1
     * adding path : 12.pdf ... done.
     * adding path : httpd.doc ... done.
    * adding path : lihttpd.zip ... done.
------- Committed revision 1 >>>
<<< Started new transaction, based on original revision 2
     * adding path : abc1.zip ... done.
     * adding path : abc2.pdf ... done.
     * adding path : abc3.doc ... done.
------- Committed revision 2 >>>
如果还有增量备份的文件：
[root@svn ~]# svnadmin load /data/svn/test/ < /home/backup/svn.2.bak
二、svnadmin 使用
1.使用svnadmin hotcopy做完全备份
 [root@svn ~]# svnadmin hotcopy /data/svn/repos/ /home/backup/svn --clean-logs
2.使用svnadmin hotcopy还原
[root@svn ~]# svnadmin hotcopy /home/backup/svn /data/svn/test/
进行测试，这里还原到test版本库中。
